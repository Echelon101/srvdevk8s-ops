## Define and create Kubernetes Service.
##
## Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/
#
ingress:
  ## Whether to enable session affinity or not. It is required by ingress.
  #
  enabled: true

  ## Define the name of the ingress class.
  ##
  ## If left empty, the cluster default is used.
  ## Set this if you need a specific class, for instance `nginx`.
  #
  ingressClassName: external

  ## Define custom ingress annotations:
  ##
  ## Example:
  ## annotations:
  ##   nginx.ingress.kubernetes.io/rewrite-target: /
  annotations: {}

  ## Define the Fully Qualified Domain Name (FQDN) where OpenProject should be reachable.
  #
  host: "openproject.0ct.cc"

  ## Define the path for OpenProject on your host.
  #
  path: /

  ## Each path in an Ingress is required to have a corresponding path type. Paths that do not include an explicit
  ## pathType will fail validation. There are three supported path types:
  ##
  ## "ImplementationSpecific" => With this path type, matching is up to the IngressClass. Implementations can treat this
  ##                             as a separate pathType or treat it identically to Prefix or Exact path types.
  ## "Exact" => Matches the URL path exactly and with case sensitivity.
  ## "Prefix" => Matches based on a URL path prefix split by /.
  ##
  ## Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
  #
  pathType: "Prefix"

## Configure memcached settings.
#
memcached:
  ## When set to true, a memcached will be deployed into current namespace, when false you have to provide your own
  ## memcached instance.
  #
  bundled: true

## Whether to allocate persistent volume disk for the data directory.
## In case of node failure, the node data directory will still persist.
##
## Ref.: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
#
persistence:
  enabled: true

  ## Define the volume access modes:
  ##
  ## "ReadWriteOnce" => The volume can be mounted as read-write by a single node. ReadWriteOnce access mode still can
  ##                    allow multiple pods to access the volume when the pods are running on the same node.
  ## "ReadOnlyMany" => The volume can be mounted as read-only by many nodes.
  ## "ReadWriteMany" => The volume can be mounted as read-write by many nodes.
  ## "ReadWriteOncePod" => The volume can be mounted as read-write by a single Pod. Use ReadWriteOncePod access mode if
  ##                       you want to ensure that only one pod across whole cluster can read that PVC or write to it.
  #
  accessModes:
    - "ReadWriteMany"

  ## Define custom storage (PVC) annotations:
  ##
  annotations: {}

  ## Define the volume size.
  #
  size: "1Gi"

  ## Define the class of PV.
  storageClassName: nfs-nas

## Configure PostgreSQL settings.
#
postgresql:
  ## When set to true, a postgres server will be deployed into current namespace, when false you have to provide your
  ## own database instance.
  #
  bundled: true

  global:
    ## Database username.
    #
    username: "openproject"

    ## Database name.
    #
    database: "openproject"

    ## If you are not using a Kubernetes secret to store your postgresql credentials,
    ## you can specify them here if you really must. Please handle with care!

    ## Database password.
    #
    password: "openproject"

    ## Database root password.
    #
    postgresPassword: "openproject"

## Configure resource requests and limits.
##
## http://kubernetes.io/docs/user-guide/compute-resources/
#
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Define and create Kubernetes Service.
##
## Ref.: https://kubernetes.io/docs/concepts/services-networking/service
#
service:
  ## Whether to enable session affinity or not. It is required by ingress.
  #
  enabled: true