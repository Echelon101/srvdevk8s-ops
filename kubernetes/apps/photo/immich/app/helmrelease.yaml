---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/ocirepository-source-v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: immich
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 0.9.2
  url: oci://ghcr.io/immich-app/immich-charts/immich
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: immich
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    ## This chart relies on the common library chart from bjw-s
    ## You can find it at https://github.com/bjw-s/helm-charts/tree/923ef40a39520979c98f354ea23963ee54f54433/charts/library/common
    ## Refer there for more detail about the supported values

    # These entries are shared between all the Immich components
    useDeprecatedPostgresChart: true
    env:
      REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
      DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
      DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
      DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
      # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
      DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
      IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'

    image:
      tag: v1.131.3

    immich:
      metrics:
        # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
        enabled: true
      persistence:
        # Main data store for all photos shared between different components.
        library:
          # Automatically creating the library volume is not supported by this chart
          # You have to specify an existing PVC to use
          existingClaim: immich-library-pvc
      # configuration is immich-config.json converted to yaml
      # ref: https://immich.app/docs/install/config-file/
      #
      configuration: {}
        # trash:
        #   enabled: false
        #   days: 30
        # storageTemplate:
        #   enabled: true
        #   template: "{{y}}/{{y}}-{{MM}}-{{dd}}/{{filename}}"

    # Dependencies

    # DEPRECATED
    # The postgres subchart is deprecated and will be removed in chart version 0.10.0
    # See https://github.com/immich-app/immich-charts/issues/149 for more detail.
    postgresql:
      enabled: true
      image:
        repository: tensorchord/pgvecto-rs
        tag: pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
      global:
        postgresql:
          auth:
            username: immich
            database: immich
            password: immich
      primary:
        containerSecurityContext:
          readOnlyRootFilesystem: false
        initdb:
          scripts:
            create-extensions.sql: |
              CREATE EXTENSION cube;
              CREATE EXTENSION earthdistance;
              CREATE EXTENSION vectors;

    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: false

    # Immich components

    server:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
      ingress:
        main:
          enabled: true
          annotations:
            # proxy-body-size is set to 0 to remove the body limit on file uploads
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            external-dns.alpha.kubernetes.io/target: external.0ct.cc
          hosts:
            - host: photo.0ct.cc
              paths:
                - path: "/"
          tls: []

    machine-learning:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-machine-learning
        pullPolicy: IfNotPresent
      env:
        TRANSFORMERS_CACHE: /cache
      persistence:
        cache:
          enabled: true
          size: 10Gi
          # Optional: Set this to pvc to avoid downloading the ML models every start.
          type: emptyDir
          accessMode: ReadWriteMany
          # storageClass: your-class
